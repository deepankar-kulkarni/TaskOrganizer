@model TaskOrganizer.Models.User

@{
    ViewBag.Title = "signup";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //create department list
    List<SelectListItem> DepartmentList = new List<SelectListItem>();

    //DepartmentList.Add(new SelectListItem
    //{
    //    Text = "Accounts",
    //    Value = "Accounts"
    //});
    //DepartmentList.Add(new SelectListItem
    //{
    //    Text = "HR",
    //    Value = "HR",
    //    Selected = true
    //});
    //DepartmentList.Add(new SelectListItem
    //{
    //    Text = "Production",
    //    Value = "Production"
    //});
    //DepartmentList.Add(new SelectListItem
    //{
    //    Text = "Management",
    //    Value = "Management"
    //});
    //DepartmentList.Add(new SelectListItem
    //{
    //    Text = "Other",
    //    Value = "Other"
    //});

}


<div class="header-outer">
    <div class="left">
        <label>Create New User</label>
    </div>
    <div class="right">
        <button class="btn btn-primary add-task" onclick="location.href='@Url.Action("GetUserWiseTask", "UserMvc",new { username = User.Identity.Name })'"><i class="fas fa-arrow-left"></i>Back</button>
    </div>
</div>
@using (Html.BeginForm("CreateUser", "UserMvc", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="text-success">
        <label>@ViewBag.UserCrestedMessage</label>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Department, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div>
                @Html.DropDownList("Department", (IEnumerable<SelectListItem>)ViewBag.DepartmentList, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LoginId, "LoginId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LoginId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, "Mobile", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Signup" class="btn btn-success" id="signup" />
        </div>
    </div>
</div>
}
